html {
    scroll-behavior: smooth;  /* Standard */
}

body {
    margin: 0px;             /* Browser-Standard rückgängig machen: Äußerer Abstand */
    font-family: "Raleway";  /* Schriftart für den ganzen Body-Bereich festlegen */
    font-family: 'Zabars', 'Arial', 'Helvetica', 'sans-serif'; /* mit 3 Ausweich-Schriftarten */
    overflow-x: hidden;     /* Standard: Was auf der X-Achse aus dem Body/Tag rausläuft wird nicht mehr gezeigt */
                           /* muss dem Body gegeben werden, -- ABER funktioniert nicht auf dem Handy -- -> Lösung: Alles in eine <div> was in <body> ist und diesem <div> das overflow-Attribut geben */
}                          /* Scrollbar hat 13px als Standard */

/* ttf-Datei einbinden*/
@font-face {
    font-family: 'Zabars'; /* Frei wählbarer Name */
    src: url('fonts2/Zabars.ttf') format('truetype');
}

/* CSS-Variable GLOBAL deklarieren mit root-PseudoKlasse (früher wurden SASS-Variablen genutzt) */
:root{
    --my_font: 20px; 
}
/* CSS-Variable gilt nur LOKAL innerhalb dieser Klasse (früher wurden SASS-Variablen genutzt) */
.irgendeineKlasse{
    --my_font: 20px; /* Bei lokaler & globaler Definition der Variable hat das lokale Vorrang innerhalb der Klasse */
}

/* CSS-Variable einer Eigenschaft einer Klasse zuweisen (2. Parameter ist die Fallback-Lösung) */
.Variablezuweisen {
    font-size : var(--my_font, 20px);       /* Normale Zuweisung */
    font-size: calc(var(--my_font) * 2.5);  /* Nutzung in calc-Funktion */
}

/* ALLE Cursor-Einstellungen: https://css-tricks.com/almanac/properties/c/cursor/ */
h1{
    cursor:context-menu; /*Lässt den Zeiger*/
}



.Sammlung-von-Attributen{

    scroll-behavior: smooth !important;

    /* Farben */
    color: white;
    color: #777777;
    color: rgb(255, 204, 255);

     /* Schrifteinstellungen */
    font-size: 25px;
    font-size: 2.5em;
    font-weight: 900;  /* NICHT PIXEL! The font-weight property sets how thick or thin characters in text should be displayed */
    font-weight: bold;   /* equals 700 */
    font-weight: normal;   /* equals 400 */

    /* Texteinstellungen */
    letter-spacing: 3px;  /* Platz zwischen den Buchstaben eines Textes */
    text-decoration: underline red;              /* Linie darunter */
    text-decoration: wavy overline lime;         /* Linie darüber */
    text-decoration: line-through;                 /* Durchgestrichen */
    text-decoration: dashed underline overline;    /* Gsestrichelt */
    text-decoration: solid underline purple 4px;
    text-underline-offset: 5px; /* Definiert wie weit die Entfernung vom Unterstrich zum Text ist */
    text-align: center; /* Positioniert den Text innerhalb eines Containers; center, left, right, justify möglich */
    text-shadow: 4px 2px 8px rgba(0, 0, 0, 0.5); /* Schatten für Text: offset-x | offset-y | blur-radius | color */

    /* Größenmaße */
    height: 100vh;
    width: 100%;
    aspect-ratio: 1/1; /* Verhältnis von Breite zu Höhe */
    height:calc(100vw * (480/720)); /* Trick um Höhe proportional mit der Breite schrumpfen zu lassen bei absoluten Elementen: 480/720 besagt wieviel Höhe pro Breite verfügbar sind */
    width: calc(33.33% - 45px); /* Berechnung mittels calc-Funktion */
    width: calc(100vw - 120px); /* Leerzeichen innerhalb der calc-Funktion sind wichtig !!! */
    max-width: 220px;
    min-width: 220px;  /* Alle Geräte die eine geringere Breite als 220px haben werden nicht mehr unterstützt */
    max-height:400px;
    min-height:400px;
    
    /* Ränder */
    border-style: ridge; /* dotted, dashed, solid, double, groove, ridge, inset, outset, none, hidden */
    border-color: white;
    border-radius: 10px;  /* Ergibt runde Ecken ; Anm: um die runden Ecken überhaupt zu sehen muss eine Hintergrundfarbe oder ein Hintergrundbild festgelegt sein*/
    border-radius: 100%;  /* Ergibt einen Kreis */
    border-radius: 10px 10px 10px 10px; /* Erzeugt abgerundete Ecken */
    /* Ränder: Nur wenn border-collapse: separate, DANN kann man über border-spacing den Abstand einstellen */
    border-collapse: separate; /* collapse möglich */
    border-spacing: 10px;
    /* Ränder: Alle auf einmal -> Dicke - Art - Farbe */
    border: 10px solid #000;  
    border: 4px solid transparent;
    border-left: 1px solid green;

    /* Hintergrund (https://cssgradient.io/) */
    background-color: rgb(250, 187, 120);
    background-color: #F9F9F9;
    background-color: green;
    background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(68,68,189,1) 24%, rgba(255,255,255,1) 100%);
    background: radial-gradient(#5988FF 6.25%, #5988FF 51.56%, #0043F0 100%);

    /* Image: Größen-Einstellungen  -> Der Container wird durch Höhe & Breite des img-Tags definiert! (img {width: 200px;height: 300px;) */
    object-fit: fill; /* (default) Bild wird gestretched oder gequetscht um in den Container zu passen -> Container wird komplett vom Bild ausgefüllt */
    object-fit: cover; /* Bild behält seine Dimensionen (Breite-Höhenverhältnis), wird nicht angepasst (verkleinert/vergrößert) und notfalls abgeschnitten */
    object-fit: contain; /* Bild behält seine Dimensionen (Breite-Höhenverhältnis), aber wird angepasst (verkleinert/vergrößert) um in den Container zu passen */
    object-fit: none; /* Bild bleibt in der Originalgröße */
    object-fit: scale-down; /* Nimmt das kleinere Bild aus den Einstellungen von 'object-fit: none' und 'object-fit: contain' */
    
    /* Image: Positionierung auf der X-Achse & Y-Achse */
    object-position: 20% 50%; /* Von der Ausgangsposition aus wird um 20% auf der X-Achse und 50% auf der Y-Achse verschoben Zum Verständnis: 100%=right bzw. 100%=bottom */
    object-position: 250px 125px; /* Von der Ausgangsposition wird über Pixel verschoben */
    object-position: right top; /* Bild ist rechts oben */
    object-position: left bottom; /* Bild ist links unten */
    object-position: right; /* Bild wird rechts an den Rand geschoben */
    object-position: center; /* Bild wird zentriert */
    
    /* Image: Erscheinungsbild modifizieren */
    filter: invert(100%);     /* Invertiert die Farben eines Imgs */
    filter: brightness(1.75); /* Erhöht die Helligkeit eines Imgs -- KEIN LEERZEICHEN -- */
    filter: blur(8px);        /* Verwäscht ein Img */ 
    filter: drop-shadow(2px 6px 8px green); /* Wirft einen Schatten */

    /* Hintergrund-Bild */
    background-image: url("./Img/motivation.jpg");
    background-color: grey;
    background-blend-mode: multiply;  /* -> Mixes the background-image with the background-color ;) */
    background-repeat: no-repeat;    /* repeat, repeat-x, repeat-y -> Wiederholt das Bild */

    /* Hintergrund-Bild: Größen-Einstellungen */
    background-size: auto;
    background-size: contain;
    background-size: cover;
    background-size: 100% 100%;
    background-size: 300px 800px;

    /* Hintergrund-Bild: Positionierung auf der X-Achse & Y-Achse */
    background-position: center top; /* ALLES SO MÖGLICH WIE BEI DER CSS-EIGENSCHAFT 'object-position' */
    
    /* Absolute Positionierung */
    position: absolute;
    top: 0px;
    left: 0px;
    right: 0px;
    bottom: 0px;

    /* Flex-Box Positionierung */
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    flex-wrap: wrap;
    flex-grow: 1; /* Definiert die Wachstumsrate eines Elements innerhalb eines Flex-Containers; 3 Boxen nebeneinander mit flex-grow: 1 2 und 3 erhalten 1/6 2/6 und 3/6 der Flex-Container-Breite */
    flex-shrink: 1; /* Definiert die Schrumpfrate eines Elements innerhalb eines Flex-Containers; */
    flex-basis: 200px; /* Definiert die Standardgröße eines Elements innerhalb eines Flex-Containers; */
    flex: 1 1 200px; /* Kurzform für flex-grow + flex-shrink + flex-basis */
    flex: 1; /* Header und Footer sind definiert und die  dazwischenliegenden Box kriegt flex: 1; -> Box nimmt sich immer den Platz den sie benötigt */
    gap: 10px; /* Definiert den Abstand der Elemente innerhalb des Flex-Containers; verkürzte Form von row-gap & column-gap */
    row-gap: 10px;
    column-gap: 10px;

    /* Innerer & Äußerer Rand */
    padding: 16px;
    padding-right: 50px;
    padding-left: 50px;
    padding-top: 50px;
    padding-bottom: 0px;
    margin: 0px;
    margin-left: 4px;
    margin-right: 4px;
    margin-left:calc((100vw - 600px)/4);  /* Berechnung mittels calc-Funktion */

    /* Durchlässigkeit/Vordergrund/Hintergrund */
    opacity: 0.8; /* Durchlässigkeit: Aber besser ist background-color, weil opacity auch auf Kind-Elemente angewendet wird */
    background-color: rgba(0,0,0,0.7); /* -> Besser als opacity */
    z-index: 1; /* 3. Dimension nach X- & Y-Achse */

    /* Scrolling */
    overflow-y:scroll; /* Sobald Dinge auf der y-Achse aus dem Container rauslaufen, wird ein Scroll-Balken für den Container eingeblendet */

    /* Input-Fields */
    outline:none;  /* Beim Klicken eines Input-Fields wird der Rand nicht hervorgehoben */
    resize:none; /* Macht die Striche der Textbox am rechten unteren Rand weg */

    /* CSS transition ändert den Wert einer CSS-Eigenschaft über die Zeit */
    /* Welche Eigenschaft soll animiert werden + wie lange soll der Übergang dauern */
    /* 1.Arg: CSS-Eigenschaft für transition, 2.Arg: Dauer der transition insgesamt, 3.Arg: Geschwindigkeit der transition über die Dauer */
    transition: all 225ms ease-in-out; /* Sobald --DIE KLASSE-- verändert wird; max 225ms & ease-in-out laut Google Forschung */
    transition: opacity 225ms ease-in-out;
    transition: transform 225ms ease-in-out; 
    
    transform: translateX(501px); /* verschiebt/versetzt ein Element um 501 Pixel auf der X-Achse */
    transform: translateY(501px); /* verschiebt/versetzt ein Element um 501 Pixel auf der Y-Achse */
    transform: translate(-46px,-13px); /* verschiebt/versetzt auf beiden Achsen */
    transform: translate3d(11px,11px,11px); /* verschiebt/versetzt auf beiden Achsen */
    transform: rotate(180deg); /* Element um 180Grad im Uhrzeigersinn um seinen Mittelpunkt drehen */
    transform: rotate3d(1,2,3,60); /* (x,y,z,Winkel) */
    transform: scale(1.0); /* vergrößert (Werte > 1) bzw. verkleinert ein Element (Werte < 1). Die Transformation passiert aus der Mitte des Elements. */
    transform: scaleX(1.0); /* Skaliert ein Element entlang der X-Achse hoch & runter */
    transform: scaleY(1.0); /* Skaliert ein Element entlang der Y-Achse hoch & runter */
    transform: scaleZ(2); /* Skaliert ein Element entlang der Z-Achse hoch & runter */
    transform: scale3d(1,2,3); /* (x,y,z) skaliert das Element in mehrere Richtungen */  
    transform: skew(50deg,-50deg); /* Verzerrt ein Element in horizontaler / vertikaler Richtung um x/y-Grad */
    transform: rotate(135deg) scaleX(0.0); /* MEHRERE Funktionen werden angewendet */
    transform: perspective(n); /*  Perspektive einer 3D-Ansicht ändern */
    transform: scale(1.3) translateY(-8px) rotate(-41deg) translateX(-37px); /* Mehrere aufeinmal -> ACHTUNG REIHENFOLGE ENTSCHEIDEND! */

    /* GENERAL SYNTAX: box-shadow: [inset][REQ:x offset][REQ:y offset][blur radius][spread distance][color]; */
    /* äußerer Schatten: [offset-x] (verschiebt die Schatten-Box auf der x-Achse) */
    /* äußerer Schatten: [offset-y] (verschiebt die Schatten-Box auf der y-Achse) */
    /* äußerer Schatten: [blur radius] (Schärfe des Schattens -> 0 (Standarwert) = ganz scharf und je größer desto unschärfer!) */
    /* äußerer Schatten: [spread distance] (Größe des Schattens -> 0 (Standarwert) = genausogroß wie "blur" und größere Werte vergrößern den Schatten) */
    /* äußerer Schatten: [color] (Farbe des Schattens) */
    box-shadow: 0px 0px 5px 10px #E6E6E6;  
    box-shadow: inset 0px 0px 5px 10px #E6E6E6;  /* innerer Schatten: mit inset */
    /* MEHRERE ANDERSFARBIGE SCHATTEN: box-shadow: [box shadow properties 1], [box shadow properties 2], [box shadow properties n]; */
    box-shadow: -5px -5px 30px 5px red, 5px 5px 30px 5px blue;
}

.textinmehrerenZeilen{
    display: -webkit-box; /* ... wenn der Text endet */
    -webkit-line-clamp:3; /* 3 Zeilen */
    -webkit-box-orient: vertical;
    overflow: hidden; /* Alles was übersteht verstecken */
}

.textInEinerZeile{
    text-overflow: ellipsis; /* ... wenn der Text endet */
    white-space: nowrap; /* max. 1 Zeile */
    overflow: hidden; /* Alles was übersteht verstecken */
}

/******
/* ::before und ::after sind Pseudo-Elemente und erlauben uns Inhalt auf eine Seite einzufügen, der nicht im HTML-Code zu sehen ist 
-> ::before setze etwas vor den Text im eigentlichen Element und ::after setzt etwas danach  */

/* <div>
  before
  <!-- Rest of stuff inside the div -->
  after
</div> */

div::before {
    content: "before";
  }
div::after {
    content: "after";
}
/******

/* Input-Field: Ändert die Farbe des Platzhalters */
::placeholder{
    color: #D1D1D1; 
 }

/* Keep white background-color for ALL input-fields when autocomplete is activated for a form (<form autocomplete="on">) */
input:-webkit-autofill {
    -webkit-text-fill-color: black ; /* Textfarbe bleibt bei schwarz (könnte man auch rausnehmen) */
    -webkit-box-shadow: inset 0 0 0px 1000px white; /* Input-Feld behält den weißen Hintergrund, statt auf hellblau zu wechseln! */
}

/* Instagram Bilder mit Farbverlauf des Randes */
/* Image innerhalb der box*/
.feed-storys-img{
    height:80px;
    width:80px;
    object-fit: cover;
    border-radius:100%;
    cursor:pointer;   
    /* border: 2px solid rgba(195, 7, 233, 0.5); */
}

/* Relative Position um den Inhalt der box sehen zu können*/
.box {
    position: relative;
  }
/* Pseudo-Element (::) um die box zu stylen*/
.box::before {  
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 100%; 
    padding: 2px; 
    background:linear-gradient(45deg,red,blue);
/* Masks allow you to overlay the content of a box with a pattern that can be used to knock out portions of that box in the final display. */ 
    -webkit-mask: 
       linear-gradient(#fff 0 0) content-box, 
       linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
            mask-composite: exclude; 
  }
/* Instagram Bilder mit Farbverlauf des Randes */



/* Tabellen */
table {
    width: 100%;
    border-spacing: 0px;
    border-collapse: collapse; /* Lässt die Rahmen der Tabellen zusammenfallen zur einer Linie */
}

table tr {
    border-radius: 10px;
    ;
}

table td {
    height: 40px;
    padding-left: 20px;
}

tr:nth-child(even) {
    background-color: white;
    
}

tr:nth-child(odd) {
    background-color: #EFEFEF;
}

table tr:first-child td{} /* 1. Zeile (tr) und davon alle Datenzellen (td) auswählen */
table tr td:first-child{} /* Von allen Zeilen (tr) die erste Datenzelle (td) auswählen */

table tr:last-child{}  /* Von allen Zeilen (tr) die letzte Zeile auswählen */
table tr:last-child td{} /* Letzte Zeile (tr) und davon alle Datenzellen (td) auswählen */
table tr td:last-child{}  /* Von allen Zeilen (tr) die letzte Datenzelle (td) auswählen */
/* Tabellen */



/* INTERVALLE FÜRS HANDY */
@media (min-width:1000px) and (max-width:2000px) {

    /* Klasse ansprechen */
    .klasse1 {
      display: none;
    }

    /* ID ansprechen */
    #id1 {
    }

    /* Mehrere Tags ansprechen */
    h2, h3, h4 {
    }

    /* Kind-Element einer Tabelle ansprechen */
    td:nth-child(1) {
    }

    /* Beim drübergehen mit der Maus */
    a:hover {
    }

    /* Beim runtergehen mit der Maus */
    a:not(:hover) {
    }

    /* Bild-Quelle (src) eines img-Elements mit der Klasse 'like' ändern beim drübergehen mit der Maus */
    .like:hover{
        content: url("../../assets/img/like-32-red.png");
    }
    
    
    /* Beim Hovern über einen Container mit Klasse oder ID (2 Beispiele) etwas mit dem Element machen, welches er umfasst */
    .container:hover img { transform: translateY(-10px);}
    #id:hover span { font-weight:bold;}

    /* Tags innerhalb einer Klasse ansprechen*/
    .sakura-ramen h1 {
    }

    /* SCSS - Beim Hovern über das Element mit der Klasse 'btn' ein anderes Element irgendwo auf der Seite mit der Klasse 'box' transformieren */
    .btn {
        &:hover + .box {
            transform: scale(3, 0.5);
        }
      }

}


@media (min-width:400px) and (max-width:999px) {
}

@media (min-width:280px) and (max-width:399px) {
}

@media (min-width:0px) and (max-width:279px) {   /* Ab hier leer lassen */
}

/* Für NestHub media-Query mit fester Breite & Höhe benutzen (dadurch können auch einzelne Mobilphones optimiert werden) */
@media (width:1024px) and (height:600px) {
}


/* KEYFRAMES */


/* Zugehörige Klasse */
/* Sobald das Element mit der Klasse "game-over" angesprochen wird, läuft die Animation mit dem Namen "zoomIn" ab */
.game-over{
    animation-name: zoomIn;
    animation-duration: 4s;
    animation-direction: reverse;  /* Richtung der Animation -> reverse = rückwärts */
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;           /* Wenn die Animation vorbei ist, dann bleibt das Element beim letzten Keyframe stehen */
                                            /* Alternativ könnte man über JavaScript den style des Elements nach der Animation auf den gewünschten Wert setzen (analog zum letzten Keyframe) */
    /* ODER */
    animation: zoomIn 225ms ease-in-out; 
    animation-fill-mode: forwards;
}

@keyframes zoomIn {
from
{ 
transform:scale(0);
opacity:0;
}  
to 
{
transform:scale(1);
opacity:1;
}
}  
                  
 /* KEYFRAMES in %-Schritten */
@keyframes pick-card-animation {
    0%{
     transform: scale(1);
    }
    40% {
     transform: scale(1.7);
    }
    60% {
     transform: scale(1.7);
    }
    100% {
     transform: scale(1.3) translateX(140px) translateY(-180px) rotate(-10deg);
    }
 }

/* Spinner */
#loader-bg{
    background-color: white;
}

#loader-bg img{
    position:absolute;
    width: 50px;
    height: 50px;
}

.loader {
    border: 16px solid #f3f3f3;
    border-top: 16px solid black;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    animation: spin 2s linear infinite;
}
  
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
/* Spinner */

/* Scrollbar: Klasse vor :: packen um spezifisch auf ein Objekt anzuwenden */
  /* Width */
  ::-webkit-scrollbar {
    width: 15px;
  }
  
  /* Track */
  ::-webkit-scrollbar-track {
    box-shadow: inset 0 0 5px grey;
    border-radius: 10px;
  }
  
  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: rgba(166, 163, 165, 0.8);
    border-radius: 10px;
  }

  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
  background: #555;
  }
/* Scrollbar: Klasse vor :: packen um spezifisch auf ein Objekt anzuwenden */

